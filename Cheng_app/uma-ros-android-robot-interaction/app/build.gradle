plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 33
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId 'com.example.umaSSRR'
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
/*
    def work_version = "2.6.0"
    // Force WorkManager 2.6.0 for transitive dependency
    //noinspection GradleDependency
    implementation("androidx.work:work-runtime-ktx:$work_version") {
        force = true
    }*/

   // implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'androidx.work:work-runtime:2.8.0-beta02'

    //implementation 'androidx.work:work-runtime-ktx:2.7.0-alpha05'

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.0' // mantener: la 1.7.0 genera error.
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // ROS
    implementation "org.ros.rosjava_core:rosjava:0.3.6"
    implementation "org.ros.rosjava_messages:diagnostic_msgs:1.12.7"
    implementation 'org.ros.rosjava_messages:geometry_msgs:1.12.7'
    // implementation 'org.ros.rosjava_messages:nav_msgs:1.12.7'
    implementation 'org.ros.rosjava_messages:std_msgs:0.5.11'
    // implementation 'org.ros.rosjava_messages:map_msgs:1.13.0'
    implementation 'org.ros.rosjava_messages:sensor_msgs:1.12.7'
    implementation 'org.ros.rosjava_bootstrap:message_generation:0.3.3'
    implementation 'org.ros.android_core:android_core_components:0.4.0'
/*
    // Camera X
    def camerax_version="1.0.0-rc02"
    //noinspection GradleDependency
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    //noinspection GradleDependency
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:1.3.0-alpha01"


*/

    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // To use constraint layout compose
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha04"


    // CameraX core library using the camera2 implementation
    def camerax_version = "1.3.0-alpha01"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation("androidx.camera:camera-core:${camerax_version}")
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    // If you want to additionally use the CameraX Lifecycle library
    implementation("androidx.camera:camera-lifecycle:${camerax_version}")
    // If you want to additionally use the CameraX VideoCapture library
    implementation("androidx.camera:camera-video:${camerax_version}")
    // If you want to additionally use the CameraX View class
    implementation("androidx.camera:camera-view:${camerax_version}")
    // If you want to additionally add CameraX ML Kit Vision Integration
    implementation("androidx.camera:camera-mlkit-vision:${camerax_version}")
    // If you want to additionally use the CameraX Extensions library
    implementation("androidx.camera:camera-extensions:${camerax_version}")





}